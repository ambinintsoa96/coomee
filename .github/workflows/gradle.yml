# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:.
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    #   with:
    #     gradle-version: '8.9'
    #
    # - name: Build with Gradle 8.9
    #   run: gradle build

  dependency-submission:
            - nom : Configuration de l'environnement Node.js
  utilisations : actions/setup-node@v4.0.3
  avec:
    # Définir always-auth dans npmrc.
    always-auth : # facultatif, la valeur par défaut est false
    # Version Spécification de la version à utiliser. Exemples : 12.x, 10.15.1, >=10.15.0.
    version-noeud : # facultatif
    # Fichier contenant la spécification de version de la version à utiliser. Exemples : package.json, .nvmrc, .node-version, .tool-versions.
    node-version-file: # facultatif
    # Architecture cible à utiliser par Node. Exemples : x86, x64. L'architecture système sera utilisée par défaut.
    architecture : # optionnel
    # Définissez cette option si vous souhaitez que l'action vérifie la dernière version disponible qui satisfait à la spécification de version.
    check-latest: # facultatif
    # Registre facultatif à configurer pour l'authentification. Définira le registre dans un fichier .npmrc et .yarnrc au niveau du projet et configurera l'authentification pour lire à partir de env.NODE_AUTH_TOKEN.
    registre-url : # facultatif
    # Portée facultative pour l'authentification par rapport aux registres délimités. Reviendra au propriétaire du référentiel lors de l'utilisation du registre des packages GitHub (https://npm.pkg.github.com/).
    portée : # facultatif
    # Utilisé pour extraire les distributions de nœuds à partir des versions de nœuds. Puisqu'il existe une valeur par défaut, elle n'est généralement pas fournie par l'utilisateur. Lorsque vous exécutez cette action sur github.com, la valeur par défaut est suffisante. Lorsque vous exécutez sur GHES, vous pouvez transmettre un jeton d'accès personnel pour github.com si vous rencontrez une limitation de débit.
    jeton : # facultatif, la valeur par défaut est ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Utilisé pour spécifier un gestionnaire de paquets pour la mise en cache dans le répertoire par défaut. Valeurs prises en charge : npm, yarn, pnpm.
    cache : # facultatif
    # Utilisé pour spécifier le chemin vers un fichier de dépendances : package-lock.json, yarn.lock, etc. Prend en charge les caractères génériques ou une liste de noms de fichiers pour la mise en cache de plusieurs dépendances.
    cache-dependency-path: # facultati
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
